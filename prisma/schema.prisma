generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TBEventReg_ACM2017 {
  ID           Int       @id
  EventTitle   String?   @db.VarChar(100)
  RegName      String?   @db.VarChar(100)
  RegEmail     String?   @db.VarChar(100)
  RegTel       String?   @db.VarChar(100)
  RegAddress   String?   @db.VarChar(200)
  RegAffiliate String?   @db.VarChar(100)
  RegPreamble  String    @db.LongText
  RegQuestion  String    @db.LongText
  RegDate      DateTime? @db.DateTime(0)
  RegIP        String    @db.VarChar(20)
}

model TBEventReg_ACM2018 {
  ID           Int       @id @default(autoincrement())
  EventTitle   String?   @db.VarChar(100)
  RegName      String?   @db.VarChar(100)
  RegEmail     String?   @db.VarChar(100)
  RegTel       String?   @db.VarChar(100)
  RegAddress   String?   @db.VarChar(200)
  RegAffiliate String?   @db.VarChar(100)
  RegPreamble  String    @db.LongText
  RegQuestion  String    @db.LongText
  RegDate      DateTime? @db.DateTime(0)
  RegIP        String    @db.VarChar(20)
}

model TBEventReg_ACM2022 {
  ID           Int       @id @default(autoincrement())
  EventTitle   String?   @db.VarChar(100)
  RegName      String?   @db.VarChar(100)
  RegEmail     String?   @db.VarChar(100)
  RegTel       String?   @db.VarChar(100)
  RegAddress   String?   @db.VarChar(200)
  RegAffiliate String?   @db.VarChar(100)
  RegPreamble  String    @db.LongText
  RegQuestion  String    @db.LongText
  RegDate      DateTime? @db.DateTime(0)
  RegIP        String    @db.VarChar(20)
}

model TBEventReg_ChessChampionship2019 {
  ID              Int      @id @default(autoincrement())
  EventTitle      String   @db.VarChar(100)
  RegNameFirst    String   @db.VarChar(100)
  RegNameLast     String   @db.VarChar(100)
  RegDOB          DateTime @db.Date
  RegEmail        String   @db.VarChar(100)
  RegTel          String   @db.VarChar(100)
  ParentNameFirst String   @db.VarChar(100)
  ParentNameLast  String   @db.VarChar(100)
  ParentTel       String   @db.VarChar(100)
  ParentEmail     String   @db.VarChar(100)
  RegDate         DateTime @db.DateTime(0)
  RegIP           String   @db.VarChar(50)
}

model TBEventReg_SEEE_2017 {
  ID         Int      @id
  EventTitle String   @db.VarChar(100)
  RegName    String   @db.VarChar(100)
  RegEmail   String   @db.VarChar(100)
  RegTel     String   @db.VarChar(100)
  RegAddress String   @db.VarChar(200)
  RegDate    DateTime @db.DateTime(0)
  RegIP      String   @db.VarChar(20)
  RegLunch   String?  @db.VarChar(3)
}

model TBEventReg_SEEE_2017_VenderInfo {
  ID              Int    @id
  VenderCompTitle String @db.VarChar(50)
  VenderResource  String @db.VarChar(50)
  VenderEmail     String @db.VarChar(50)
  VenderDescrip   String @db.Text
  VenderBooth     String @db.VarChar(2)
  VenderTel       String @db.VarChar(20)
  AMorPM          String @db.VarChar(4)
  AM1             String @db.VarChar(20)
  AM2             String @db.VarChar(20)
  AM3             String @db.VarChar(20)
  AM4             String @db.VarChar(20)
  AM5             String @db.VarChar(20)
  AM6             String @db.VarChar(20)
  PM1             String @db.VarChar(20)
  PM2             String @db.VarChar(20)
  PM3             String @db.VarChar(20)
  PM4             String @db.VarChar(20)
  PM5             String @db.VarChar(20)
  PM6             String @db.VarChar(20)
}

model TBEventReg_SEEE_2018 {
  ID         Int      @id @default(autoincrement())
  EventTitle String   @db.VarChar(100)
  RegName    String   @db.VarChar(100)
  RegEmail   String   @db.VarChar(100)
  RegTel     String   @db.VarChar(100)
  RegAddress String   @db.VarChar(200)
  RegDate    DateTime @db.DateTime(0)
  RegIP      String   @db.VarChar(50)
  RegLunch   String?  @db.VarChar(3)
}

model TBEventReg_SEEE_2018_VenderInfo {
  ID                  Int    @id @default(autoincrement())
  VenderCompTitle     String @db.VarChar(50)
  VenderContactPerson String @db.VarChar(50)
  VenderResource      String @db.VarChar(50)
  VenderEmail         String @db.VarChar(50)
  VenderDescrip       String @db.Text
  VenderBooth         String @db.VarChar(2)
  VenderTel           String @db.VarChar(20)
  TimeSlot1           String @db.VarChar(50)
  TimeSlot2           String @db.VarChar(50)
  TimeSlot3           String @db.VarChar(50)
  TimeSlot4           String @db.VarChar(50)
  TimeSlot5           String @db.VarChar(50)
  TimeSlot6           String @db.VarChar(50)
  TimeSlot7           String @db.VarChar(50)
  TimeSlot8           String @db.VarChar(50)
  TimeSlot9           String @db.VarChar(50)
  TimeSlot10          String @db.VarChar(50)
}

model TBEventReg_SpringIntoAction {
  ID         Int       @id
  EventTitle String?   @db.VarChar(100)
  RegName    String?   @db.VarChar(100)
  RegEmail   String?   @db.VarChar(100)
  RegTel     String?   @db.VarChar(100)
  RegAddress String?   @db.VarChar(200)
  RegDate    DateTime? @db.DateTime(0)
  RegIP      String    @db.VarChar(20)
}

model TBInvisibleIllness2019 {
  IndexID     Int      @id @default(autoincrement())
  RegName     String   @db.VarChar(30)
  RegEmail    String   @db.VarChar(50)
  RegTel      String   @db.VarChar(20)
  IfRCDMember String   @db.VarChar(5)
  RegDate     DateTime @db.DateTime(0)
  RegIP       String   @db.VarChar(20)
}

model TB_2017Gala_Karaoka {
  ID                Int      @id
  NominatorName     String   @db.VarChar(30)
  NominatorTelEmail String   @db.VarChar(50)
  NomineeName       String   @db.VarChar(30)
  NomineeTelEmail   String   @db.VarChar(50)
  KaraokeName       String   @db.VarChar(50)
  BringCD           String   @db.VarChar(3)
  RegDateTime       DateTime @db.DateTime(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TB_Auction_Item {
  ItemID         Int
  ItemCode       String   @db.VarChar(8)
  ItemName       String   @db.VarChar(300)
  ItemDescrip    String   @db.Text
  ItemPhoto      String   @db.VarChar(200)
  ItemPriceStart Decimal  @db.Decimal(7, 2)
  ItemIncrement  Decimal  @db.Decimal(5, 2)
  ItemStartTime  DateTime @db.DateTime(0)
  ItemEndTime    DateTime @db.DateTime(0)
  ItemPhotoPath  String   @db.VarChar(200)
  ItemActive     String   @db.VarChar(3)

  @@ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TB_Auction_Item_Bid {
  ItemBidID                Int
  ItemBidName              String   @db.VarChar(20)
  ItemBidPhone             String   @db.VarChar(20)
  ItemBidEmail             String   @db.VarChar(50)
  ItemBidPrice             Decimal  @db.Decimal(5, 2)
  ItemID                   Int
  ItemBidRecordCreatedDate DateTime @db.DateTime(0)

  @@ignore
}

model categoryList {
  categorytype String? @db.VarChar(255)
  hide         Int?
  categoryID   Int     @id @default(autoincrement())
}

model events {
  id    Int       @id @default(autoincrement())
  title String    @db.VarChar(255)
  color String?   @db.VarChar(7)
  start DateTime  @db.DateTime(0)
  end   DateTime? @db.DateTime(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model feature {
  Parking         String? @db.VarChar(5000)
  Sidewalk        String? @db.VarChar(5000)
  Entrance        String? @db.VarChar(5000)
  PublicWashroom  String? @db.VarChar(1000)
  Elevator        String? @db.VarChar(1000)
  Lobby           String? @db.VarChar(1000)
  GuestRoom       String? @db.VarChar(5000)
  DiningRoom      String? @db.VarChar(5000)
  Patio           String? @db.VarChar(5000)
  MeetingRoom     String? @db.VarChar(5000)
  PublicTelephone String? @db.VarChar(5000)
  MajorRestaurant String? @db.VarChar(5000)
  GroceryOutlet   String? @db.VarChar(1000)
  FoodCourt       String? @db.VarChar(1000)
  MainTheatre     String? @db.VarChar(1000)
  recordInfo_ID   Int?
  Other           String? @db.VarChar(5000)

  @@index([recordInfo_ID], map: "recordInfo_ID")
  @@ignore
}

model recordInfo {
  recordInfo_ID Int     @id @default(autoincrement())
  categoryID    Int?
  Name          String? @db.VarChar(1000)
  StreetAddress String? @db.VarChar(1000)
  City          String? @db.VarChar(100)
  PostalCode    String? @db.VarChar(10)
  Province      String? @db.VarChar(50)
  Telephone     String? @db.VarChar(20)
  Fax           String? @db.VarChar(20)
  Website       String? @db.VarChar(1000)

  @@index([categoryID], map: "categoryID")
}

model tbl_MakeItFair_2024 {
  ID             Int      @id @default(autoincrement())
  answer         String   @db.VarChar(30)
  answerIP       String   @db.VarChar(20)
  answerDateTime DateTime @db.DateTime(0)
}

model tbl_TshirtContest {
  id         Int      @id
  fname      String   @db.VarChar(100)
  lname      String   @db.VarChar(100)
  tel        String   @db.VarChar(50)
  email      String   @db.VarChar(100)
  notes      String   @db.Text
  artwork    String   @db.VarChar(100)
  imgPreview String   @db.VarChar(100)
  ip         String   @db.VarChar(20)
  submitTime DateTime @db.DateTime(0)
}

model users {
  Username String @db.VarChar(50)
  Password String @db.VarChar(50)
  id       Int    @id @default(autoincrement())
}

model Tbl_barrage_ILAcrossCanadaDay2023 {
  barrage_id      Int      @id @default(autoincrement())
  barrage_content String   @db.VarChar(100)
  createdAt       DateTime @db.Timestamp(0)
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique(map: "name") @db.VarChar(150)
  auth_group_permissions auth_group_permissions[]
  auth_user_groups       auth_user_groups[]
}

model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([permission_id], map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
}

model auth_permission {
  id                         Int                          @id @default(autoincrement())
  name                       String                       @db.VarChar(255)
  content_type_id            Int
  codename                   String                       @db.VarChar(100)
  auth_group_permissions     auth_group_permissions[]
  django_content_type        django_content_type          @relation(fields: [content_type_id], references: [id], onUpdate: Restrict, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")
  auth_user_user_permissions auth_user_user_permissions[]

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
}

model auth_user {
  id                         Int                          @id @default(autoincrement())
  password                   String                       @db.VarChar(128)
  last_login                 DateTime?                    @db.DateTime(6)
  is_superuser               Boolean
  username                   String                       @unique(map: "username") @db.VarChar(150)
  first_name                 String                       @db.VarChar(150)
  last_name                  String                       @db.VarChar(150)
  email                      String                       @db.VarChar(254)
  is_staff                   Boolean
  is_active                  Boolean
  date_joined                DateTime                     @db.DateTime(6)
  auth_user_groups           auth_user_groups[]
  auth_user_user_permissions auth_user_user_permissions[]
  django_admin_log           django_admin_log[]
}

model auth_user_groups {
  id         BigInt     @id @default(autoincrement())
  user_id    Int
  group_id   Int
  auth_group auth_group @relation(fields: [group_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
  auth_user  auth_user  @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id")

  @@unique([user_id, group_id], map: "auth_user_groups_user_id_group_id_94350c0c_uniq")
  @@index([group_id], map: "auth_user_groups_group_id_97559544_fk_auth_group_id")
}

model auth_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
  auth_user       auth_user       @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id")

  @@unique([user_id, permission_id], map: "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq")
  @@index([permission_id], map: "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm")
}

model django_admin_log {
  id                  Int                  @id @default(autoincrement())
  action_time         DateTime             @db.DateTime(6)
  object_id           String?              @db.LongText
  object_repr         String               @db.VarChar(200)
  action_flag         Int                  @db.UnsignedSmallInt
  change_message      String               @db.LongText
  content_type_id     Int?
  user_id             Int
  django_content_type django_content_type? @relation(fields: [content_type_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  auth_user           auth_user            @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")

  @@index([content_type_id], map: "django_admin_log_content_type_id_c4bce8eb_fk_django_co")
  @@index([user_id], map: "django_admin_log_user_id_c564eba6_fk_auth_user_id")
}

model django_content_type {
  id               Int                @id @default(autoincrement())
  app_label        String             @db.VarChar(100)
  model            String             @db.VarChar(100)
  auth_permission  auth_permission[]
  django_admin_log django_admin_log[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.DateTime(6)
}

model django_session {
  session_key  String   @id @db.VarChar(40)
  session_data String   @db.LongText
  expire_date  DateTime @db.DateTime(6)

  @@index([expire_date], map: "django_session_expire_date_a5c62663")
}

model tbl_BMORun2024_Barrage {
  ID           Int      @id @default(autoincrement())
  donor_Fname  String?  @db.VarChar(20)
  donor_Lname  String?  @db.VarChar(20)
  donor_Org    String?  @db.VarChar(50)
  donor_Amount Decimal? @db.Decimal(10, 2)
  createdAt    String   @db.VarChar(20)
}

model tbl_ETransferInfo {
  id          Int      @id @default(autoincrement())
  fname       String   @db.VarChar(100)
  lname       String   @db.VarChar(100)
  userAddress String   @db.VarChar(200)
  userTel     String   @db.VarChar(20)
  useremail   String   @db.VarChar(100)
  todaydate   DateTime @db.Date
  RegDate     DateTime @db.Date
  RegTime     DateTime @db.Time(0)
  userIP      String   @db.VarChar(20)
}

model tbl_barrage_at_us_2023 {
  id             Int    @id @default(autoincrement())
  barrageContent String @db.VarChar(225)
}

model tbl_next_auth {
  id         Int     @id @default(autoincrement())
  username   String  @db.VarChar(20)
  password   String  @db.VarChar(200)
  email      String  @db.VarChar(20)
  isVerified Boolean @default(false)
  isAdmin    Boolean @default(false)
}

model tbl_onlineconcert2022_donors {
  donor_id     Int    @id @default(autoincrement())
  donor_fname  String @db.VarChar(50)
  donor_lname  String @db.VarChar(50)
  donor_amount Int
}
